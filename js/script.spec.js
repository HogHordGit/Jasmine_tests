describe("Тестирование функции ageClassification(num)",() => {
    const testArr = [-1, 1, 24, 24.01, 44, 44.01, 65, 65.1, 75, 75.01, 90, 90.01, 122, 122.01, 150];

    let m;
    let i = 0;

    beforeEach(() => {
        m = ageClassification(testArr[i++]);
    });

    it("Проверим num = -1, должно вернуть null",() => {
        expect(m).toBe(null);
    });

    it("Проверим num = 1, должно вернуть 'детский возраст'",() => {
        expect(m).toBe("детский возраст");
    });

    it("Проверим num = 24, должно вернуть 'детский возраст'",() => {
        expect(m).toBe("детский возраст");
    });

    it("Проверим num = 24.01, должно вернуть 'молодой возраст'",() => {
        expect(m).toBe("молодой возраст");
    });

    it("Проверим num = 44, должно вернуть 'молодой возраст'",() => {
        expect(m).toBe("молодой возраст");
    });

    it("Проверим num = 44.01, должно вернуть 'cредний возраст'",() => {
        expect(m).toBe("средний возраст");
    });

    it("Проверим num = 65 , должно вернуть 'cредний возраст'",() => {
        expect(m).toBe("средний возраст");
    });

    it("Проверим num = 65.1, должно вернуть 'пожилой возраст'",() => {
        expect(m).toBe("пожилой возраст");
    });

    it("Проверим num = 75, должно вернуть 'пожилой возраст'",() => {
        expect(m).toBe("пожилой возраст");
    });

    it("Проверим num = 75.01, должно вернуть 'старческий возраст'",() => {
        expect(m).toBe("старческий возраст");
    });

    it("Проверим num = 90 , должно вернуть 'старческий возраст'",() => {
        expect(m).toBe("старческий возраст");
    });

    it("Проверим num = 90.01, должно вернуть 'долгожители'",() => {
        expect(m).toBe("долгожители");
    });

    it("Проверим num = 122, должно вернуть 'долгожители'",() => {
        expect(m).toBe("долгожители");
    });

    it("Проверим num = 122.01  должно вернуть null",() => {
        expect(m).toBe(null);
    });
});

describe("Тестирование функции weekFn(num)",() => {
    const testArr = [1, 3, 7, 9, 1.5, "2"];

    let m;
    let i = 0;

    beforeEach(() => {
        m = weekFn(testArr[i++]);
    });

    it("Проверим num = 1, должно вернуть 'Понедельник'",() => {
        expect(m).toBe('Понедельник');
    });

    it("Проверим num = 3, должно вернуть 'Среда'",() => {
        expect(m).toBe('Среда');
    });

    it("Проверим num = 7, должно вернуть 'Воскресенье'",() => {
        expect(m).toBe('Воскресенье');
    });

    it("Проверим num = 9, должно вернуть null",() => {
        expect(m).toBe(null);
    });

    it("Проверим num = 1.5, должно вернуть null",() => {
        expect(m).toBe(null);
    });

    it("Проверим num = '2', должно вернуть null",() => {
        expect(m).toBe(null);
    });
});


